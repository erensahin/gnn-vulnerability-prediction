""" Logger module """

import logging
import os
from datetime import date
from vulnerability_prediction import LOG_DIR

LOG_FILE_NAME = os.path.join(LOG_DIR, "logs_{}.txt".format(date.today()))


def setup_custom_logger(name="default_logger", log_file=LOG_FILE_NAME):
    """Creates a custom logger with a timestamp."""

    formatter = logging.Formatter(
        fmt='%(asctime)s %(levelname)-8s [%(filename)s:%(lineno)d] %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S')

    file_handler = None
    if log_file is not None:
        file_handler = logging.FileHandler(log_file, mode='w')
        file_handler.setFormatter(formatter)

    screen_handler = logging.StreamHandler()
    screen_handler.setFormatter(formatter)

    logger = logging.getLogger(name)
    logger.setLevel(logging.INFO)
    logger.addHandler(screen_handler)

    if file_handler is not None:
        logger.addHandler(file_handler)

    return logger


LOGGER = setup_custom_logger()
